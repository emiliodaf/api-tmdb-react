{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emili\\\\Documents\\\\Devprojetos\\\\api-tmdb-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { API_SEARCH, API_URL } from './api/api-key';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_IMG = 'https://image.tmdb.org/t/p/w500/';\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    fetch(API_URL).then(response => response.json()).then(data => {\n      setMovies(data.results);\n    });\n  }, []);\n\n  //Below here we have started to apply the search component logic in order to be able to search term//\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    if (searchTerm) {\n      fetch(API_SEARCH + searchTerm).then(resp => resp.json()).then(data => {\n        setSearchTerm(data.results);\n      });\n      setSearchTerm('');\n    }\n  };\n  const handleOnChange = e => {\n    setSearchTerm(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleOnSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          placeholder: \"search\",\n          value: setSearchTerm,\n          onChange: handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      \"movie-container\": true,\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"movie\", {\n        ...movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 14\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"nmGuk4IsUa4415BYG0nQ+6CoHIo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","API_SEARCH","API_URL","API_IMG","App","movies","setMovies","searchTerm","setSearchTerm","fetch","then","response","json","data","results","handleOnSubmit","e","preventDefault","resp","handleOnChange","target","value","map","movie","id"],"sources":["C:/Users/emili/Documents/Devprojetos/api-tmdb-react/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { API_SEARCH, API_URL } from './api/api-key'\r\nimport './App.css';\r\n\r\nconst API_IMG = 'https://image.tmdb.org/t/p/w500/'\r\n\r\nfunction App() {\r\n\r\nconst [movies, setMovies] = useState([])\r\nconst [searchTerm, setSearchTerm] = useState('')\r\n\r\n\r\nuseEffect(() => {\r\n    fetch(API_URL)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        setMovies(data.results)\r\n    })\r\n\r\n},[])\r\n\r\n//Below here we have started to apply the search component logic in order to be able to search term//\r\n\r\nconst handleOnSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (searchTerm) {\r\n\r\n\r\n    fetch(API_SEARCH + searchTerm)\r\n    .then(resp => resp.json())\r\n    .then(data => {\r\n        setSearchTerm(data.results)\r\n    })\r\n\r\n    setSearchTerm('');\r\n\r\n      }\r\n};\r\n\r\nconst handleOnChange = (e) => {\r\n\r\n    setSearchTerm(e.target.value)\r\n\r\n\r\n}\r\n    \r\n  return (\r\n<>\r\n<header>\r\n    <form onSubmit={handleOnSubmit}>\r\n        <input type='search' \r\n               placeholder='search'\r\n               value={setSearchTerm}\r\n               onChange={handleOnChange}> \r\n               </input>\r\n        </form>\r\n</header>\r\n\r\n    <div movie-container>\r\n        {movies.map((movie) =>(\r\n             <movie key={movie.id} {...movie} />\r\n        ))}\r\n    </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,OAAO,QAAQ,eAAe;AACnD,OAAO,WAAW;AAAC;AAAA;AAEnB,MAAMC,OAAO,GAAG,kCAAkC;AAElD,SAASC,GAAG,GAAG;EAAA;EAEf,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAGhDD,SAAS,CAAC,MAAM;IACZU,KAAK,CAACP,OAAO,CAAC,CACbQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACVP,SAAS,CAACO,IAAI,CAACC,OAAO,CAAC;IAC3B,CAAC,CAAC;EAEN,CAAC,EAAC,EAAE,CAAC;;EAEL;;EAEA,MAAMC,cAAc,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAElB,IAAIV,UAAU,EAAE;MAGhBE,KAAK,CAACR,UAAU,GAAGM,UAAU,CAAC,CAC7BG,IAAI,CAACQ,IAAI,IAAIA,IAAI,CAACN,IAAI,EAAE,CAAC,CACzBF,IAAI,CAACG,IAAI,IAAI;QACVL,aAAa,CAACK,IAAI,CAACC,OAAO,CAAC;MAC/B,CAAC,CAAC;MAEFN,aAAa,CAAC,EAAE,CAAC;IAEf;EACN,CAAC;EAED,MAAMW,cAAc,GAAIH,CAAC,IAAK;IAE1BR,aAAa,CAACQ,CAAC,CAACI,MAAM,CAACC,KAAK,CAAC;EAGjC,CAAC;EAEC,oBACF;IAAA,wBACA;MAAA,uBACI;QAAM,QAAQ,EAAEN,cAAe;QAAA,uBAC3B;UAAO,IAAI,EAAC,QAAQ;UACb,WAAW,EAAC,QAAQ;UACpB,KAAK,EAAEP,aAAc;UACrB,QAAQ,EAAEW;QAAe;UAAA;UAAA;UAAA;QAAA;MACjB;QAAA;QAAA;QAAA;MAAA;IACR;MAAA;MAAA;MAAA;IAAA,QACN,eAEL;MAAK,uBAAe;MAAA,UACfd,MAAM,CAACiB,GAAG,CAAEC,KAAK,iBACb;QAAA,GAA0BA;MAAK,GAAnBA,KAAK,CAACC,EAAE;QAAA;QAAA;QAAA;MAAA,QACxB;IAAC;MAAA;MAAA;MAAA;IAAA,QACA;EAAA,gBAEH;AAEP;AAAC,GA7DQpB,GAAG;AAAA,KAAHA,GAAG;AA+DZ,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module"}